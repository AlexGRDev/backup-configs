# ===============================
#   HISTORIAL / EDICI√ìN
# ===============================
setopt histignorealldups sharehistory inc_append_history
bindkey -e
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# ===============================
#   HOMEBREW
# ===============================
if [ -x /opt/homebrew/bin/brew ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# ===============================
#   PATH DIN√ÅMICO
# ===============================
if [[ "$(hostname)" == *"student"* || "$(whoami)" == "agarcia2" ]]; then
  export PATH="$HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
else
  export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$HOME/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
fi

# ===============================
#   COMPLETION
# ===============================
autoload -Uz compinit
ZSH_COMPDUMP=${ZSH_COMPDUMP:-$HOME/.zcompdump}
if [[ ! -f $ZSH_COMPDUMP || ! -s $ZSH_COMPDUMP ]]; then
  compinit
else
  compinit -C
fi

# ===============================
#   POWERLEVEL10K + BANNER
# ===============================
load_p10k() {
  local THEME_DIR="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k"
  local THEME_FILE="$THEME_DIR/powerlevel10k.zsh-theme"
  [[ -r "$THEME_FILE" ]] && source "$THEME_FILE"
  if [[ -r "$HOME/.p10k.zsh" ]]; then
    source "$HOME/.p10k.zsh"
  fi
  if typeset -f p10k >/dev/null; then
    p10k reload 2>/dev/null || true
  fi
}

show_banner() {
  if [[ "$TERM" == "xterm-kitty" || -n "$KITTY_WINDOW_ID" ]]; then
    if command -v fastfetch >/dev/null 2>&1; then
      fastfetch
    elif command -v neofetch >/dev/null 2>&1; then
      neofetch
    fi
  fi
}

# ===============================
#   OH MY ZSH
# ===============================
if [[ -d ${ZSH:-$HOME/.oh-my-zsh} ]]; then
  export ZSH=${ZSH:-$HOME/.oh-my-zsh}
  ZSH_THEME="powerlevel10k/powerlevel10k"
  plugins=(git z web-search)
  source "$ZSH/oh-my-zsh.sh"
  load_p10k
fi

# ===============================
#   ALIASES
# ===============================
alias ll='ls -Alh'
alias la='ls -A'
alias l='ls -1'
alias gs='git status -sb'
alias ga='git add -A'
alias gc='git commit -m'
alias gco='git checkout'
alias gb='git branch'
alias gd='git diff'
alias gl='git log --oneline --graph --decorate --all'
alias gp='git push'
alias gpl='git pull'
alias compile='/usr/bin/gcc'
alias norma='norminette'

# ===============================
#   CAT BONITO
# ===============================
cat() {
  if [[ $# -eq 0 ]]; then
    command cat
    return
  fi
  for f in "$@"; do
    [[ ! -f "$f" ]] && { echo "‚ùå Archivo no encontrado: $f"; continue; }
    local lines
    lines=$(wc -l < "$f" | tr -d ' ')
    echo -e "\nüìÑ Archivo: \033[1;36m$f\033[0m ‚Äî \033[1;33m${lines} l√≠neas\033[0m\n"
    if command -v bat >/dev/null 2>&1 && file -b --mime-type "$f" | grep -q '^text/'; then
      bat --style=full --pager=never "$f"
    else
      command cat "$f"
    fi
    echo
  done
}

# ===============================
#   BACKUP CONFIGS
# ===============================
backup_configs() {
  local backup_dir="/usr/local/backup"
  local timestamp=$(date +'%Y-%m-%d_%H-%M-%S')

  mkdir -p "$backup_dir/zsh" "$backup_dir/vim" "$backup_dir/kitty"

  cp ~/.zshrc "$backup_dir/zsh/zshrc_$timestamp"
  cp ~/.vimrc "$backup_dir/vim/vimrc_$timestamp" 2>/dev/null || true
  cp ~/.config/kitty/kitty.conf "$backup_dir/kitty/kitty_${timestamp}.conf" 2>/dev/null || true

  echo "üóÑ  Backup ‚Üí $backup_dir ($timestamp)"
}

# ===============================
#   BACKUP + PUSH GITHUB
# ===============================
backup_push() {
  backup_configs
  local dir="/usr/local/backup"
  if [[ ! -d "$dir/.git" ]]; then
    echo "‚ÑπÔ∏è  /usr/local/backup no es un repo git; salto el push."
    return
  fi
  ( cd "$dir" || exit 1
    git add -A
    if git diff --cached --quiet; then
      echo "‚ÑπÔ∏è  No hay cambios nuevos."
      exit 0
    fi
    git commit -m "backup: $(date +'%Y-%m-%d %H:%M:%S %z')"
    if git remote get-url origin >/dev/null 2>&1; then
      git push
      echo "‚úÖ Backup subido a GitHub."
    else
      echo "‚ö†Ô∏è  No hay remoto 'origin'. A√±√°delo con:"
      echo "    git -C $dir remote add origin git@github.com:AlexGRDev/terminal-backups.git"
      echo "    git -C $dir push -u origin main"
    fi
  )
}

# ===============================
#   RECARGA TOTAL
# ===============================
recarga() {
  echo "üîÑ Guardando backup, subiendo a GitHub y recargando configuraci√≥n..."
  backup_push
  export ZSHRC_RELOADING=1
  source ~/.zshrc
  unset ZSHRC_RELOADING
  load_p10k
  show_banner
  echo "‚úÖ Listo."
}

# ===============================
#   BACKUP AUTOM√ÅTICO AL ABRIR
# ===============================
if [[ -z "$ZSHRC_RELOADING" ]]; then
  backup_push
  show_banner
fi

# ===============================
#   FZF
# ===============================
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
